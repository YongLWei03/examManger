<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mf.mapper.ExamMapper" >
  <resultMap id="BaseResultMap" type="com.mf.domain.Exam" >
    <id column="examId" property="examid" jdbcType="VARCHAR" />
    <result column="paperId" property="paperid" jdbcType="VARCHAR" />
    <result column="startTime" property="starttime" jdbcType="TIMESTAMP" />
    <result column="endTime" property="endtime" jdbcType="TIMESTAMP" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="employeeId" property="employeeid" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    examId, paperId, startTime, endTime, address, status, employeeId
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from exam
    where examId = #{examid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from exam
    where examId = #{examid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.mf.domain.Exam" >
    insert into exam (examId, paperId, startTime, 
      endTime, address, status, 
      employeeId)
    values (#{examid,jdbcType=VARCHAR}, #{paperid,jdbcType=VARCHAR}, #{starttime,jdbcType=TIMESTAMP}, 
      #{endtime,jdbcType=TIMESTAMP}, #{address,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, 
      #{employeeid,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.mf.domain.Exam" >
    insert into exam
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="examid != null" >
        examId,
      </if>
      <if test="paperid != null" >
        paperId,
      </if>
      <if test="starttime != null" >
        startTime,
      </if>
      <if test="endtime != null" >
        endTime,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="employeeid != null" >
        employeeId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="examid != null" >
        #{examid,jdbcType=VARCHAR},
      </if>
      <if test="paperid != null" >
        #{paperid,jdbcType=VARCHAR},
      </if>
      <if test="starttime != null" >
        #{starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="endtime != null" >
        #{endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="employeeid != null" >
        #{employeeid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.mf.domain.Exam" >
    update exam
    <set >
      <if test="paperid != null" >
        paperId = #{paperid,jdbcType=VARCHAR},
      </if>
      <if test="starttime != null" >
        startTime = #{starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="endtime != null" >
        endTime = #{endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="employeeid != null" >
        employeeId = #{employeeid,jdbcType=VARCHAR},
      </if>
    </set>
    where examId = #{examid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mf.domain.Exam" >
    update exam
    set paperId = #{paperid,jdbcType=VARCHAR},
      startTime = #{starttime,jdbcType=TIMESTAMP},
      endTime = #{endtime,jdbcType=TIMESTAMP},
      address = #{address,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      employeeId = #{employeeid,jdbcType=VARCHAR}
    where examId = #{examid,jdbcType=VARCHAR}
  </update>
</mapper>