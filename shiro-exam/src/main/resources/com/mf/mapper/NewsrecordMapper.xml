<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mf.mapper.NewsrecordMapper" >
  <resultMap id="BaseResultMap" type="com.mf.domain.Newsrecord" >
    <id column="newsId" property="newsid" jdbcType="VARCHAR" />
    <result column="employeeId" property="employeeid" jdbcType="VARCHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="createTime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.mf.domain.Newsrecord" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    newsId, employeeId, title, createTime, status, description
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from newsrecord
    where newsId = #{newsid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from newsrecord
    where newsId = #{newsid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.mf.domain.Newsrecord" >
    insert into newsrecord (newsId, employeeId, title, 
      createTime, status, description, 
      content)
    values (#{newsid,jdbcType=VARCHAR}, #{employeeid,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, 
      #{createtime,jdbcType=TIMESTAMP}, #{status,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.mf.domain.Newsrecord" >
    insert into newsrecord
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="newsid != null" >
        newsId,
      </if>
      <if test="employeeid != null" >
        employeeId,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="createtime != null" >
        createTime,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="newsid != null" >
        #{newsid,jdbcType=VARCHAR},
      </if>
      <if test="employeeid != null" >
        #{employeeid,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.mf.domain.Newsrecord" >
    update newsrecord
    <set >
      <if test="employeeid != null" >
        employeeId = #{employeeid,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where newsId = #{newsid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.mf.domain.Newsrecord" >
    update newsrecord
    set employeeId = #{employeeid,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where newsId = #{newsid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mf.domain.Newsrecord" >
    update newsrecord
    set employeeId = #{employeeid,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR}
    where newsId = #{newsid,jdbcType=VARCHAR}
  </update>
</mapper>